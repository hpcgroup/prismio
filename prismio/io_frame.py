# Copyright 2020-2021 Parallel Software and Systems Group, University of
# Maryland. See the top-level LICENSE file for details.
#
# SPDX-License-Identifier: MIT

"""
The prismio.io_frame module provides the IOFrame class for structured data
structure and flexible api of tracing/profiling data generated by Recorder
or Darshan
"""


import sys
import os
import numpy as np
import pandas as pd

from pathlib import Path

class IOFrame:
    """
    Main class of the prism application. It holds I/O performance data 
    generated by I/O tools. It reorganizes the data into a Pandas.DataFrame,
    which contains useful information such as the start time of functions, 
    the files functions access to, etc. It also provides flexible api 
    functions for user to do analysis.
    """
    def __init__(self, dataframe):
        """
        Args:
            dataframe (DataFrame): the dataframe this IOFrame should have.

        Return:
            None.

        """
        self.dataframe = dataframe

    @staticmethod
    def from_recorder(log_dir):
        """
        Read trace files from recorder and create the corresponding
        IOFrame object.

        Args:
            log_dir (str): path to the trace files directory of Recorder the user wants to analyze.

        Return:
            A IOFrame object corresponding to this trace files directory.

        """
        from prismio.readers.recorder_reader import RecorderReader
        return RecorderReader(log_dir).read()

    def filter(self, my_lambda): 
        """
        Create a new IOFrame based on the filter function the user provides.

        Args:
            my_lambda (function): filtering function. For example, np.sum, np.sort.

        Return:
            A new IOFrame object with a new filtered dataframe.

        """
        dataframe = self.dataframe[self.dataframe.apply(my_lambda, axis = 1)]
        dataframe = dataframe.reset_index()
        dataframe = dataframe.drop('index', axis=1)
        return IOFrame(dataframe)

    def groupby_aggregate(self, groupby_columns, agg_function):
        """
        Return a dataframe after groupby and aggregate operations on the dataframe of this IOFrame.

        Args:
            groupby_columns (list of strings): the column names the user want to groupby.
            agg_function (function or string): the function used for aggregation. For example, 'sum', 'count', etc.

        Return:
            A dataframe after groupby and aggregate operations on the dataframe of this IOFrame.

        """
        groupby_obj = self.dataframe.groupby(groupby_columns)
        agg_dataframe = groupby_obj.agg(agg_function)
        return agg_dataframe
    
